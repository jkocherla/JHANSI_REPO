/*****************************************************************************
* Component Name	: Deck_WholeOrderExport_API								 *
* Flow Name			: Deck_WholeOrderExport_API.msgflow						 *
* File Name  		: CallGlobalReturnAPI_Response.esql	 					 *
*                                                                            *
* Description		: This ESQL File logs the response recevied and throws   *
*                     error if needed.										 *
* 																			 *
* ***************************Revision History*********************************
* Author 					Date			Description						 *
* ===============		=============	============================		 *
* Prakash Chandra 		May-14-2021		Initial Code						 *
* Prakash Chandra 		Feb-18-2022		Added logging code					 * 
*																			 *
******************************************************************************/
CREATE COMPUTE MODULE CallGlobalReturnAPI_Response
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		--Declare variables
		DECLARE errorCode,errorMsg		CHARACTER;
		DECLARE Ref_Env					REFERENCE TO Environment;
		DECLARE rmaRespPayloadBlob 		BLOB ASBITSTREAM(InputRoot.JSON);
		DECLARE rmaRespPayload			CHARACTER BASE64ENCODE(COALESCE(rmaRespPayloadBlob,InputRoot.BLOB.BLOB));
		DECLARE rmaHttpHeaderBlob 		BLOB ASBITSTREAM(InputRoot.HTTPResponseHeader);
		DECLARE rmaHttpHeader			CHARACTER CAST(rmaHttpHeaderBlob AS CHAR CCSID 1208);	
		
		--Capture response received from Provider
		SET errorCode		= InputRoot.HTTPResponseHeader."X-Original-HTTP-Status-Code";
		
		--Set Environment variables to be sent for craeting Audit Message
		SET Environment.Variables.AuditMessage 		= NULL;
		
		IF errorCode = '200' THEN
			SET Environment.Variables.ErrorInfo.Code 		= '0';
		    SET Environment.Variables.ErrorInfo.Category 	= 'SUCCESS';
		    SET Environment.Variables.ErrorInfo.Description = 'Return request successfully sent to RMA API for Order# -'|| Environment.Variables.Info.PONumber;	
		ELSE 
			CREATE LASTCHILD OF OutputLocalEnvironment DOMAIN('JSON') PARSE(InputRoot.BLOB.BLOB);
			SET errorMsg		= COALESCE(OutputLocalEnvironment.JSON.Data.error.message,COALESCE(OutputLocalEnvironment.JSON.Data.error,COALESCE(OutputLocalEnvironment.JSON.Data.moreInformation,'')));
			
	    	SET Environment.Variables.ErrorInfo.Code 		= '1';
	    	SET Environment.Variables.ErrorInfo.Category 	= 'FAILURE'; 
	    	SET Environment.Variables.ErrorInfo.Description = 'Error response received from RAM API for Order#- ' || Environment.Variables.Info.PONumber ||' '|| COALESCE(errorCode,' ') ||' ' ||COALESCE(errorMsg,''); 
	    END IF;	
		
		SET OutputLocalEnvironment					= NULL;
		SET Environment.Variables.Info.Header 		= rmaHttpHeader;
		SET Environment.Variables.Info.Payload 		= rmaRespPayload;
		SET Environment.Variables.Info.Priority 	= '0';
		MOVE Ref_Env TO Environment.Variables;
		
		--Call Audit procedure to create Audit Message and send it to Queue
	    CALL com.nb.esb.iib.cmn.logging.PROC_Audit(Ref_Env, 'RESPONSE', 'PROVIDER_TO_IIB','RMAReturnsAPI');
	    SET OutputRoot.JSON.Data.AuditMessage 	= Ref_Env.AuditMessage;
		PROPAGATE TO LABEL 'ToAudit';	
		
		--Throw error if error response is received from CA
		IF errorCode <> '200' THEN
			THROW USER EXCEPTION MESSAGE 500 VALUES(Environment.Variables.ErrorInfo.Description);	
		END IF;	
		
		RETURN TRUE;
	END;

END MODULE;
